---
# tasks file for role_pip
- name: Get the path to current pip's executable
  ansible.builtin.shell:
    cmd: which pip3
  environment:
    PATH: "{{ env_path }}"
  args:
    executable: /bin/zsh
  register: pip_executable
  changed_when: false
  ignore_errors: true

- name: Set fact for current pip_executable
  ansible.builtin.set_fact:
    pip_executable: "{{ pip_executable.stdout if pip_executable is success else 'pip3' }}"

- name: Check pip version
  ansible.builtin.command:
    cmd: "{{ pip_executable }} --version"
  register: pip_version
  changed_when: false
  ignore_errors: true

- name: Set fact for current pip_version
  ansible.builtin.set_fact:
    pip_version: "{{ pip_version.stdout | regex_search('python3.[0-9]+') }}"

- name: Set fact for if pip_need_install
  ansible.builtin.set_fact:
    pip_need_install: "{{ false if pip_version == 'python3.9' else true }}"

- name: Install pip locally if pip is not installed locally
  when: pip_need_install
  block:
    - name: Download and install pip locally # noqa: command-instead-of-module
      ansible.builtin.shell:
        cmd: wget -O $HOME/get-pip.py https://bootstrap.pypa.io/get-pip.py
      environment:
        PATH: "{{ env_path }}"
      args:
        executable: /bin/zsh

    - name: Download and install pip locally # noqa: no-changed-when
      ansible.builtin.shell:
        cmd: python3.9 $HOME/get-pip.py
      environment:
        PATH: "{{ env_path }}"
      args:
        executable: /bin/zsh

    - name: Get the path to new pip's executable
      ansible.builtin.shell:
        cmd: which pip3
      environment:
        PATH: "{{ env_path }}"
      args:
        executable: /bin/zsh
      register: new_pip_executable
      changed_when: false

    - name: Set fact for new pip_executable
      ansible.builtin.set_fact:
        new_pip_executable: "{{ new_pip_executable.stdout }}"

    - name: Check new pip version
      ansible.builtin.command:
        cmd: "{{ new_pip_executable }} --version"
      register: new_pip_version
      changed_when: false

    - name: Set fact for new pip_version
      ansible.builtin.set_fact:
        new_pip_version: "{{ new_pip_version.stdout | regex_search('python3.[0-9]+') }}"

- name: Set fact for pip version and its executable path
  ansible.builtin.set_fact:
    pip_version: "{{ new_pip_version if pip_need_install else pip_version }}"
    pip_executable: "{{ new_pip_executable if pip_need_install else pip_executable }}"
    cacheable: "yes"

- name: Install necessary pip packages # noqa: package-latest
  ansible.builtin.pip:
    executable: "{{ pip_executable }}"
    name: "{{ default_pip_packages + additional_pip_packages }}"
    state: latest
    extra_args: --user
  when: pip_version == "python3.9"
